{{- if .Values.monitoring.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: {{ .Values.infra.destination.server }}
    namespace: {{ .Values.monitoring.namespace }}
  project: {{ .Values.infra.project }}
  source:
    repoURL: {{ .Values.monitoring.repoURL }}
    targetRevision: {{ .Values.monitoring.targetRevision }}
  helm:
    skipCrds: true
    values: |
      {{ if .Values.monitoring.pdkey }}
        alertmanager:
          config:
            route:
              group_by: ['namespace']
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: default
              routes:
              - receiver: default
                matchers:
                  - alertname =~ "InfoInhibitor|Watchdog"
            receivers:
              - name: default
                pagerduty_configs:
                - service_key: {{ .Values.monitoring.pdkey }}
      {{ end }}
        prometheus:
          enabled: true
          prometheusSpec:
            podMonitorNamespaceSelector:
            any: true
            podMonitorSelector: {}
            podMonitorSelectorNilUsesHelmValues: false
            ruleNamespaceSelector:
              any: true
            ruleSelector: {}
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector:
              any: true
            serviceMonitorSelector: {}
            serviceMonitorSelectorNilUsesHelmValues: false
            retention: {{ .Values.monitoring.retention }}
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: {{ .Values.monitoring.storageClass }}
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: {{ .Values.monitoring.storageSize }}
        grafana:
          enabled: true
          ingress:
            enabled: true
            ingressClassName: nginx
            pathType: ImplementationSpecific
            hosts:
              - grafana.local
          sidecar:
            dashboards:
              searchNamespace: ALL
          service:
            type: ClusterIP
          additionalDataSources:
            - name: loki
              type: loki
              url: http://loki.monitoring.svc.cluster.local:3100
    chart: kube-prometheus-stack
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
{{- end }}
