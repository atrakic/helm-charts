name: ci

on:
  push:
  workflow_dispatch:
  workflow_call:
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (lint)
        run: ct lint --config ./.github/configs/ct.yaml

      - name: Run chart-testing (list-changed)
        if: github.event_name == 'pull_request'
        id: list-changed
        run: |
          changed=$(ct --config ./.github/configs/ct.yaml list-changed)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1

      - name: Create monitoring namespace
        if: steps.list-changed.outputs.changed == 'true'
        run: kubectl create namespace monitoring

      - name: Install CertManager crds
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace cert-manager
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.16.2/cert-manager.crds.yaml

      - name: Install ArgoCD crds
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace argocd
          #kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          #kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
          kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/refs/heads/master/manifests/crds/application-crd.yaml
          kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/refs/heads/master/manifests/crds/applicationset-crd.yaml
          kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/refs/heads/master/manifests/crds/appproject-crd.yaml

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --config ./.github/configs/ct.yaml

      - name: Debug failure
        if: steps.list-changed.outputs.changed == 'true' && failure()
        run: |
          helm list -A
          kubectl get all,cm,sa -A

      - name: Cleanup
        if: steps.list-changed.outputs.changed == 'true' && failure()
        run: |
          kubectl get events --sort-by='.metadata.creationTimestamp' -A
